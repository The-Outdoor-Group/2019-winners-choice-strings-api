<%= form_with(model: bow_string, local: true) do |form| %>
  <% if bow_string.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(bow_string.errors.count, "error") %> prohibited this bow_string from being saved:</h2>

      <ul>
      <% bow_string.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <%= form_tag colors_path, id: "color-form", method: :get do %>
    <select id="color-new-bow-string" placeholder="Enter the color name" class="form-control"></select>
    <!-- <#%= text_field_tag 'color', params[:term], placeholder: "Enter bow string color" %> -->
    <!-- <#%= submit_tag 'Search!' %> -->
  <% end %>


  <!-- <div class="field">
    <#%= form.label :color_id %>
    <#%= form.select(:color_id, @color_options) %>
  </div> -->

  <div>
    <h5>Color Choice</h5>
      <div id="result-div" style="min-height: 10vh;"></div>
  </div>

  <!-- <#%= render :partial => 'color', :collection => @colors %> -->

  <div class="form-group row">
    <%= form.label :materials, class: "col-md-2 col-form-label" %>
    <div class="col-md-10">
    <%= form.collection_check_boxes(:materials, @materials, :id, :name, options = {include_hidden: false}) do |b| %>
      <div class="form-check form-check-inline">
        <%= b.check_box(class: "form-check-input") %>
        <%= b.label(class: "form-check-label")%>
      </div>
    <% end %>
    </div>
  </div>

  <div class="form-group row">
    <%= form.label :strand_1_image, class: "col-md-2 col-form-label" %>
    <div class="col-md-10">
      <%= form.text_field :strand_1_image, class: "form-control" %>
    </div>
  </div>

  <div class="form-group row">
    <%= form.label :strand_2_image, class: "col-md-2 col-form-label" %>
    <div class="col-md-10">
      <%= form.text_field :strand_2_image, class: "form-control" %>
    </div>
  </div>

  <div class="form-group row">
    <%= form.label :serving_image, class: "col-md-2 col-form-label" %>
    <div class="col-md-10">
      <%= form.text_field :serving_image, class: "form-control" %>
    </div>
  </div>

  <div class="actions form-group">
    <%= form.submit class: "btn btn-primary btn-edit" %>
  </div>
<% end %>

<script>
    var $selectNewColor = $('select#color-new-bow-string');

    $selectNewColor.select2({
      theme: "bootstrap",
      ajax: {
        allowClear: true,
        url: function(params) {
          return '/colors';
        },
        dataType: 'json',
        delay: 500,
        data: function(params) {
          return { name: params.term };
        },
        processResults: function (data, params) {
            return {
              results: _.map(data, function (el) {
                console.log('data: ', data);
                          return {
                            id: el.id,
                            text: el.name,
                            code: el.code,
                            count: el.count,
                            swatch_url: el.swatch_url
                          };
                        })
            }
          }
      },
      placeholder: "Search by color name",
      minimumInputLength: 3,
      templateResult: function (item) {
        return item.text;
      },
      templateSelection: function (item) {
        if (typeof item !== undefined) {
          return `Please enter color name`;
        }
        else {
          return item.text;
          }
      }
    });

    $selectNewColor.on('select2:select', function(e) {
      console.log('select2:select: ', e.params.data);
      $.ajax({
        url: '/colors/' + e.params.data.id,
        method: 'get',
        dataType: 'json'
      }).done(
        function(result) {
          console.log('done result: ', result);
          const $resultEl = $('#result-div');
          console.log('$resultEl: ', $resultEl);
          let $resultElCopy = `<p>Buckskin</p>`;
          $resultEl.innerText = $resultElCopy;
          // return result;

          // Got the color returned, now send it to the server so it can resend the data
          // to this view as a @color
        }
      )
    });

</script>
